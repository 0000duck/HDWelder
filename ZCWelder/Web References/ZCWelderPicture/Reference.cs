//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace ZCWelder.ZCWelderPicture {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WelderPictureSoap", Namespace="ZC")]
    public partial class WelderPicture : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetWelderPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWelderPicturebyFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetWelderPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWelderPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteWelderPicturebyFileNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWelderPictureFileNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExistWelderPictureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WelderPicture() {
            this.Url = global::ZCWelder.Properties.Settings.Default.江南造船焊工信息管理软件_ZCWelderPicture_WelderPicture;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetWelderPictureCompletedEventHandler GetWelderPictureCompleted;
        
        /// <remarks/>
        public event GetWelderPicturebyFileNameCompletedEventHandler GetWelderPicturebyFileNameCompleted;
        
        /// <remarks/>
        public event SetWelderPictureCompletedEventHandler SetWelderPictureCompleted;
        
        /// <remarks/>
        public event DeleteWelderPictureCompletedEventHandler DeleteWelderPictureCompleted;
        
        /// <remarks/>
        public event DeleteWelderPicturebyFileNameCompletedEventHandler DeleteWelderPicturebyFileNameCompleted;
        
        /// <remarks/>
        public event GetWelderPictureFileNamesCompletedEventHandler GetWelderPictureFileNamesCompleted;
        
        /// <remarks/>
        public event ExistWelderPictureCompletedEventHandler ExistWelderPictureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/GetWelderPicture", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetWelderPicture(string str_IdentificationCard) {
            object[] results = this.Invoke("GetWelderPicture", new object[] {
                        str_IdentificationCard});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWelderPictureAsync(string str_IdentificationCard) {
            this.GetWelderPictureAsync(str_IdentificationCard, null);
        }
        
        /// <remarks/>
        public void GetWelderPictureAsync(string str_IdentificationCard, object userState) {
            if ((this.GetWelderPictureOperationCompleted == null)) {
                this.GetWelderPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWelderPictureOperationCompleted);
            }
            this.InvokeAsync("GetWelderPicture", new object[] {
                        str_IdentificationCard}, this.GetWelderPictureOperationCompleted, userState);
        }
        
        private void OnGetWelderPictureOperationCompleted(object arg) {
            if ((this.GetWelderPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWelderPictureCompleted(this, new GetWelderPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/GetWelderPicturebyFileName", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetWelderPicturebyFileName(string str_FileName) {
            object[] results = this.Invoke("GetWelderPicturebyFileName", new object[] {
                        str_FileName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWelderPicturebyFileNameAsync(string str_FileName) {
            this.GetWelderPicturebyFileNameAsync(str_FileName, null);
        }
        
        /// <remarks/>
        public void GetWelderPicturebyFileNameAsync(string str_FileName, object userState) {
            if ((this.GetWelderPicturebyFileNameOperationCompleted == null)) {
                this.GetWelderPicturebyFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWelderPicturebyFileNameOperationCompleted);
            }
            this.InvokeAsync("GetWelderPicturebyFileName", new object[] {
                        str_FileName}, this.GetWelderPicturebyFileNameOperationCompleted, userState);
        }
        
        private void OnGetWelderPicturebyFileNameOperationCompleted(object arg) {
            if ((this.GetWelderPicturebyFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWelderPicturebyFileNameCompleted(this, new GetWelderPicturebyFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/SetWelderPicture", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetWelderPicture([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] mybyte, string str_IdentificationCard, string str_WelderName) {
            object[] results = this.Invoke("SetWelderPicture", new object[] {
                        mybyte,
                        str_IdentificationCard,
                        str_WelderName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetWelderPictureAsync(byte[] mybyte, string str_IdentificationCard, string str_WelderName) {
            this.SetWelderPictureAsync(mybyte, str_IdentificationCard, str_WelderName, null);
        }
        
        /// <remarks/>
        public void SetWelderPictureAsync(byte[] mybyte, string str_IdentificationCard, string str_WelderName, object userState) {
            if ((this.SetWelderPictureOperationCompleted == null)) {
                this.SetWelderPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetWelderPictureOperationCompleted);
            }
            this.InvokeAsync("SetWelderPicture", new object[] {
                        mybyte,
                        str_IdentificationCard,
                        str_WelderName}, this.SetWelderPictureOperationCompleted, userState);
        }
        
        private void OnSetWelderPictureOperationCompleted(object arg) {
            if ((this.SetWelderPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetWelderPictureCompleted(this, new SetWelderPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/DeleteWelderPicture", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWelderPicture(string str_IdentificationCard) {
            object[] results = this.Invoke("DeleteWelderPicture", new object[] {
                        str_IdentificationCard});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWelderPictureAsync(string str_IdentificationCard) {
            this.DeleteWelderPictureAsync(str_IdentificationCard, null);
        }
        
        /// <remarks/>
        public void DeleteWelderPictureAsync(string str_IdentificationCard, object userState) {
            if ((this.DeleteWelderPictureOperationCompleted == null)) {
                this.DeleteWelderPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWelderPictureOperationCompleted);
            }
            this.InvokeAsync("DeleteWelderPicture", new object[] {
                        str_IdentificationCard}, this.DeleteWelderPictureOperationCompleted, userState);
        }
        
        private void OnDeleteWelderPictureOperationCompleted(object arg) {
            if ((this.DeleteWelderPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWelderPictureCompleted(this, new DeleteWelderPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/DeleteWelderPicturebyFileName", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteWelderPicturebyFileName(string str_FileName) {
            object[] results = this.Invoke("DeleteWelderPicturebyFileName", new object[] {
                        str_FileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteWelderPicturebyFileNameAsync(string str_FileName) {
            this.DeleteWelderPicturebyFileNameAsync(str_FileName, null);
        }
        
        /// <remarks/>
        public void DeleteWelderPicturebyFileNameAsync(string str_FileName, object userState) {
            if ((this.DeleteWelderPicturebyFileNameOperationCompleted == null)) {
                this.DeleteWelderPicturebyFileNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWelderPicturebyFileNameOperationCompleted);
            }
            this.InvokeAsync("DeleteWelderPicturebyFileName", new object[] {
                        str_FileName}, this.DeleteWelderPicturebyFileNameOperationCompleted, userState);
        }
        
        private void OnDeleteWelderPicturebyFileNameOperationCompleted(object arg) {
            if ((this.DeleteWelderPicturebyFileNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWelderPicturebyFileNameCompleted(this, new DeleteWelderPicturebyFileNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/GetWelderPictureFileNames", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetWelderPictureFileNames() {
            object[] results = this.Invoke("GetWelderPictureFileNames", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetWelderPictureFileNamesAsync() {
            this.GetWelderPictureFileNamesAsync(null);
        }
        
        /// <remarks/>
        public void GetWelderPictureFileNamesAsync(object userState) {
            if ((this.GetWelderPictureFileNamesOperationCompleted == null)) {
                this.GetWelderPictureFileNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWelderPictureFileNamesOperationCompleted);
            }
            this.InvokeAsync("GetWelderPictureFileNames", new object[0], this.GetWelderPictureFileNamesOperationCompleted, userState);
        }
        
        private void OnGetWelderPictureFileNamesOperationCompleted(object arg) {
            if ((this.GetWelderPictureFileNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWelderPictureFileNamesCompleted(this, new GetWelderPictureFileNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("ZC/ExistWelderPicture", RequestNamespace="ZC", ResponseNamespace="ZC", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExistWelderPicture(string str_IdentificationCard) {
            object[] results = this.Invoke("ExistWelderPicture", new object[] {
                        str_IdentificationCard});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExistWelderPictureAsync(string str_IdentificationCard) {
            this.ExistWelderPictureAsync(str_IdentificationCard, null);
        }
        
        /// <remarks/>
        public void ExistWelderPictureAsync(string str_IdentificationCard, object userState) {
            if ((this.ExistWelderPictureOperationCompleted == null)) {
                this.ExistWelderPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExistWelderPictureOperationCompleted);
            }
            this.InvokeAsync("ExistWelderPicture", new object[] {
                        str_IdentificationCard}, this.ExistWelderPictureOperationCompleted, userState);
        }
        
        private void OnExistWelderPictureOperationCompleted(object arg) {
            if ((this.ExistWelderPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExistWelderPictureCompleted(this, new ExistWelderPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWelderPictureCompletedEventHandler(object sender, GetWelderPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWelderPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWelderPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWelderPicturebyFileNameCompletedEventHandler(object sender, GetWelderPicturebyFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWelderPicturebyFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWelderPicturebyFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SetWelderPictureCompletedEventHandler(object sender, SetWelderPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetWelderPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetWelderPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteWelderPictureCompletedEventHandler(object sender, DeleteWelderPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWelderPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWelderPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DeleteWelderPicturebyFileNameCompletedEventHandler(object sender, DeleteWelderPicturebyFileNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWelderPicturebyFileNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteWelderPicturebyFileNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWelderPictureFileNamesCompletedEventHandler(object sender, GetWelderPictureFileNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWelderPictureFileNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWelderPictureFileNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ExistWelderPictureCompletedEventHandler(object sender, ExistWelderPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExistWelderPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExistWelderPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591